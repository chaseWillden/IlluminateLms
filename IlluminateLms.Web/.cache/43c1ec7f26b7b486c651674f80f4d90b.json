{"dependencies":[{"name":"/Users/chasewillden/Documents/dev/IlluminateLms/IlluminateLms.Web/package.json","includedInParent":true,"mtime":1520480799020},{"name":"/Users/chasewillden/Documents/dev/IlluminateLms/IlluminateLms.Web/node_modules/stifle/package.json","includedInParent":true,"mtime":1517425887000}],"generated":{"js":"module.exports = stifle;\n\n\nfunction stifle (fn, wait) {\n  if (typeof fn !== 'function' || typeof wait !== 'number') {\n    throw new Error('stifle(fn, wait) -- expected a function and number of milliseconds, got (' + typeof fn + ', ' + typeof wait + ')');\n  }\n\n  var timer;    // Timer to fire after `wait` has elapsed\n  var called;   // Keep track if it gets called during the `wait`\n\n  var wrapper = function () {\n\n    // Check if still \"cooling down\" from a previous call\n    if (timer) {\n      called = true;\n    } else {\n      // Start a timer to fire after the `wait` is over\n      timer = setTimeout(afterWait, wait);\n      // And call the wrapped function\n      fn();\n    }\n  }\n\n  // Add a cancel method, to kill and pending calls\n  wrapper.cancel = function () {\n    // Clear the called flag, or it would fire twice when called again later\n    called = false;\n\n    // Turn off the timer, so it won't fire after the wait expires\n    if (timer) {\n      clearTimeout(timer);\n      timer = undefined;\n    }\n  }\n\n  function afterWait() {\n    // Empty out the timer\n    timer = undefined;\n\n    // If it was called during the `wait`, fire it again\n    if (called) {\n      called = false;\n      wrapper();\n    }\n  }\n\n  return wrapper;\n}\n","map":{"mappings":[{"source":"../node_modules/stifle/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/stifle/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"../node_modules/stifle/index.js":"module.exports = stifle;\n\n\nfunction stifle (fn, wait) {\n  if (typeof fn !== 'function' || typeof wait !== 'number') {\n    throw new Error('stifle(fn, wait) -- expected a function and number of milliseconds, got (' + typeof fn + ', ' + typeof wait + ')');\n  }\n\n  var timer;    // Timer to fire after `wait` has elapsed\n  var called;   // Keep track if it gets called during the `wait`\n\n  var wrapper = function () {\n\n    // Check if still \"cooling down\" from a previous call\n    if (timer) {\n      called = true;\n    } else {\n      // Start a timer to fire after the `wait` is over\n      timer = setTimeout(afterWait, wait);\n      // And call the wrapped function\n      fn();\n    }\n  }\n\n  // Add a cancel method, to kill and pending calls\n  wrapper.cancel = function () {\n    // Clear the called flag, or it would fire twice when called again later\n    called = false;\n\n    // Turn off the timer, so it won't fire after the wait expires\n    if (timer) {\n      clearTimeout(timer);\n      timer = undefined;\n    }\n  }\n\n  function afterWait() {\n    // Empty out the timer\n    timer = undefined;\n\n    // If it was called during the `wait`, fire it again\n    if (called) {\n      called = false;\n      wrapper();\n    }\n  }\n\n  return wrapper;\n}\n"},"lineCount":50}},"hash":"8b313566264ab9ed2293a53be989ea93","cacheData":{"env":{}}}